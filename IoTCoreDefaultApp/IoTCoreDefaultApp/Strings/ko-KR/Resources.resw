<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="IoTCoreHeader.Text" xml:space="preserve">
    <value>Windows 10 IoT Core</value>
    <comment>The Operating System Name</comment>
  </data>
  <data name="GenericBoardName" xml:space="preserve">
    <value>IoTCore Board</value>
    <comment>A generic board name</comment>
  </data>
  <data name="MainPageDeviceName.Text" xml:space="preserve">
    <value>장치 이름</value>
    <comment>Field label</comment>
  </data>
  <data name="MainPageNetwork.Text" xml:space="preserve">
    <value>네트워크</value>
    <comment>Field label</comment>
  </data>
  <data name="MBMName" xml:space="preserve">
    <value>MinnowBoard Max</value>
    <comment>Board name</comment>
  </data>
  <data name="RestartText.Text" xml:space="preserve">
    <value>다시 시작</value>
    <comment>Restart entry in the shutdown menu</comment>
  </data>
  <data name="ShutdownText.Text" xml:space="preserve">
    <value>종료</value>
    <comment>Shutdown entry in the shutdown menu</comment>
  </data>
  <data name="BackButton.Content" xml:space="preserve">
    <value>뒤로</value>
  </data>
  <data name="CancelButton.Content" xml:space="preserve">
    <value>취소</value>
  </data>
  <data name="ConnectAutomatically.Text" xml:space="preserve">
    <value>자동으로 연결</value>
  </data>
  <data name="ConnectButton.Content" xml:space="preserve">
    <value>연결</value>
  </data>
  <data name="DirectConnections.Text" xml:space="preserve">
    <value>직접 연결</value>
  </data>
  <data name="Ethernet.Text" xml:space="preserve">
    <value>이더넷</value>
    <comment>Field label</comment>
  </data>
  <data name="NetworkConnectingMessage.Text" xml:space="preserve">
    <value>네트워크 요구 사항 확인 중</value>
  </data>
  <data name="NetworkPasswordPrompt.Text" xml:space="preserve">
    <value>네트워크 보안 키 입력</value>
  </data>
  <data name="NextButton.Content" xml:space="preserve">
    <value>다음</value>
  </data>
  <data name="NoNetworks.Text" xml:space="preserve">
    <value>없음</value>
  </data>
  <data name="OOBEIntro.Text" xml:space="preserve">
    <value>먼저 기본 설정을 하세요.</value>
  </data>
  <data name="OOBELanguageSelect.Text" xml:space="preserve">
    <value>언어 선택</value>
  </data>
  <data name="OOBENetworkTitle.Text" xml:space="preserve">
    <value>연결하기</value>
  </data>
  <data name="OOBEWelcomeTitle.Text" xml:space="preserve">
    <value>Windows IoT Core 시작</value>
  </data>
  <data name="Rpi2Name" xml:space="preserve">
    <value>Raspberry Pi 2</value>
    <comment>Board name</comment>
  </data>
  <data name="SkipStep.Text" xml:space="preserve">
    <value>이 단계 건너뛰기</value>
  </data>
  <data name="Wifi.Text" xml:space="preserve">
    <value>Wi-Fi</value>
    <comment>Label for Wi-Fi list in options page</comment>
  </data>
  <data name="StartDeveloping.Text" xml:space="preserve">
    <value> 방문하세요.</value>
    <comment>Part of "Visit www.windowsondevices.com to start developing"</comment>
  </data>
  <data name="Visit.Text" xml:space="preserve">
    <value>개발을 시작하려면</value>
    <comment>Part of "Visit www.windowsondevices.com to start developing"</comment>
  </data>
  <data name="KeyboardTitle.Text" xml:space="preserve">
    <value>키보드 레이아웃</value>
    <comment>Field label</comment>
  </data>
  <data name="LanguageTitle.Text" xml:space="preserve">
    <value>언어</value>
    <comment>Field label</comment>
  </data>
  <data name="NetworkConnected.Text" xml:space="preserve">
    <value>연결됨</value>
  </data>
  <data name="NetworkPreferences.Text" xml:space="preserve">
    <value>네트워크 및 Wi-Fi</value>
  </data>
  <data name="SettingsPreferences.Text" xml:space="preserve">
    <value>기본 설정</value>
  </data>
  <data name="SettingsTitle.Text" xml:space="preserve">
    <value>장치 설정</value>
  </data>
  <data name="TimeZoneTitle.Text" xml:space="preserve">
    <value>표준 시간대</value>
  </data>
  <data name="DeviceInfo.Text" xml:space="preserve">
    <value>장치 정보</value>
  </data>
  <data name="Tutorials.Text" xml:space="preserve">
    <value>자습서</value>
    <comment>Text under the Tutorials button on the top bar</comment>
  </data>
  <data name="ConnectedDevices.Text" xml:space="preserve">
    <value>연결된 장치</value>
  </data>
  <data name="Ipv4.Text" xml:space="preserve">
    <value>IPv4</value>
    <comment>Field label</comment>
  </data>
  <data name="Ipv6.Text" xml:space="preserve">
    <value>IPv6</value>
    <comment>Field label</comment>
  </data>
  <data name="MainPageIPAddress.Text" xml:space="preserve">
    <value>IP 주소</value>
    <comment>Field label</comment>
  </data>
  <data name="NetworkInformation.Text" xml:space="preserve">
    <value>네트워크 정보</value>
  </data>
  <data name="Status.Text" xml:space="preserve">
    <value>상태</value>
    <comment>Status of the network connection (e.g. not connected, limited, etc.)</comment>
  </data>
  <data name="TutorialGetCodingDescription.Text" xml:space="preserve">
    <value>PC에서 원격으로 코드를 작성하는 방법</value>
    <comment>Tutorial titles and subtitles</comment>
  </data>
  <data name="TutorialGetCodingTitle.Text" xml:space="preserve">
    <value>코딩</value>
    <comment>Tutorial titles and subtitles</comment>
  </data>
  <data name="TutorialGetConnectedDescription.Text" xml:space="preserve">
    <value>인터넷 및 PC에 장치 연결</value>
    <comment>Tutorial titles and subtitles</comment>
  </data>
  <data name="TutorialGetConnectedTitle.Text" xml:space="preserve">
    <value>연결하기</value>
    <comment>Tutorial titles and subtitles</comment>
  </data>
  <data name="TutorialGetStartedDescription.Text" xml:space="preserve">
    <value>Windows IoT Core 소개</value>
    <comment>Tutorial titles and subtitles</comment>
  </data>
  <data name="TutorialGetStartedTitle.Text" xml:space="preserve">
    <value>시작하기</value>
    <comment>Tutorial titles and subtitles</comment>
  </data>
  <data name="TutorialHeader.Text" xml:space="preserve">
    <value>Windows IoT Core 활용 방법</value>
    <comment>Tutorial titles and subtitles</comment>
  </data>
  <data name="TutorialHelloBlinkyDescription.Text" xml:space="preserve">
    <value>장치에서 LED 켜기/끄기</value>
    <comment>Tutorial titles and subtitles</comment>
  </data>
  <data name="TutorialHelloBlinkyTitle.Text" xml:space="preserve">
    <value>Hello Blinky</value>
    <comment>Tutorial titles and subtitles</comment>
  </data>
  <data name="TutorialTitle.Text" xml:space="preserve">
    <value>연결과 개발에 도움이 되는 리소스 및 도구</value>
  </data>
  <data name="TutorialBlinkyBody1.Text" xml:space="preserve">
    <value>보드에서 가장 기본적인 첫 번째 항목은 깜박임입니다.</value>
  </data>
  <data name="TutorialBlinkyBody2.Text" xml:space="preserve">
    <value>"시작" 섹션에서 설명한 대로 이 오픈 소스의 모든 소스 코드는 www. windowsondevices.com(IoTCoreDefaultApp 검색)에서 사용할 수 있습니다.</value>
  </data>
  <data name="TutorialBlinkyBody3.Text" xml:space="preserve">
    <value>설정은 필요하지 않습니다. [시작]을 누르기만 하세요.</value>
  </data>
  <data name="TutorialBlinkyBody4.Text" xml:space="preserve">
    <value>깜박임의 빈도를 변경할 수도 있습니다. 언제든지 친구들을 초대하여 Raspberry Pi 2 주변에서 댄스 파티를 열 수도 있습니다.</value>
  </data>
  <data name="TutorialBlinkyBody5.Text" xml:space="preserve">
    <value>통지 사항: 보드의 깜박이는 작은 LED를 이용해 대규모 파티를 주최하여 발생할 수 있는 모든 손상에 대해 Microsoft는 책임을 지지 않습니다.</value>
  </data>
  <data name="TutorialBlinkyTitle1.Text" xml:space="preserve">
    <value>Hello Blinky</value>
    <comment>Tutorial titles and subtitles</comment>
  </data>
  <data name="TutorialBlinkyTitle2.Text" xml:space="preserve">
    <value>보드의 깜박임 설정</value>
    <comment>Tutorial titles and subtitles</comment>
  </data>
  <data name="MainPageOSVersion.Text" xml:space="preserve">
    <value>OS 버전</value>
    <comment>Label for OS Version field in main page</comment>
  </data>
  <data name="OSVersionNotAvailable" xml:space="preserve">
    <value>사용할 수 없음</value>
    <comment>Text shown when we cannot retrieve the OS Version</comment>
  </data>
  <data name="Refresh.Content" xml:space="preserve">
    <value>새로 고침</value>
    <comment>Refresh button</comment>
  </data>
</root>